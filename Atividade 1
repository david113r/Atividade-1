//Alunos:David Marques dos reis lima,√çthalo Silva Soares e Ivanesia Xavier Medeiro


#include<stdio.h>
#include<stdlib.h>
#include<time.h>

struct data
{

    int dia, mes, ano;

    void lerData()
    {
        fflush(stdin);

        printf("\ndigite o dia de nascimento:");
        scanf("%d",&dia);


        printf("\ndigite o mes de nascimento:");
        scanf("%d",&mes);


        printf("\ndigite o ano de nascimento:");
        scanf("%d",&ano);


    }

    void imprimirData()
    {


        printf("Data de nascimento:%02d/%02d/%04d\n", dia, mes, ano);

    }

    int calcularIdade()
    {

        data atual = dataatual();

        if (mes < atual.mes || (mes == atual.mes && dia <=atual.dia))
        {

            return atual.ano- ano;
        }
        return (atual.ano - ano) - 1;
    }




    data dataatual()
    {
        data atual;

        struct tm *p;
        time_t seconds;

        time(&seconds);
        p=localtime(&seconds);

        atual.dia=p->tm_mday;
        atual.mes=p->tm_mon+1;
        atual.ano=p->tm_year + 1900;

        return atual;


    }

};


struct Cliente
{
    data dat;
    char nome[100];
    int idade;
    char sexo;

    void lerCliente()
    {

        fflush(stdin);
        printf("\ndigite o nome aqui:");
        scanf("%[^\n]s", nome);
        fflush(stdin);
        printf("\ndigite o sexo aqui:");
        scanf("%c", &sexo);
        fflush(stdin);
        dat.lerData();
        idade = dat.calcularIdade();
    }

    void imprimirCliente()
    {
        printf("Nome: %s\n", nome);
        printf("Sexo: %c\n", sexo);
        dat.imprimirData();
        printf("Idade: %d\n", idade);
        printf("\n");
    }

};







int main()
{
    data dat;

    dat.dataatual();

    Cliente clientes[50];
    int ultimoCliente = -1;
    char op;

    do
    {

        printf("1. Ler\n");
        printf("2. Imprimir\n");
        printf("3. Sair\n");

        fflush(stdin);
        scanf("%c", &op);

        switch(op)
        {
        case '1':
            clientes[++ultimoCliente].lerCliente();
            break;
        case '2':
            for (int i = 0; i <= ultimoCliente; i++)
            {
                clientes[i].imprimirCliente();
            }
            break;
        case '3':
            printf("Tchau!");
            break;
        default:
            printf("Op invalida!");
            break;
        }

    }
    while (op != '3');


    return 0;
}
